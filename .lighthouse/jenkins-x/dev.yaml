apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: NPM_CONFIG_USERCONFIG
            value: /tekton/home/npm/.npmrc
          image: uses:q1323829945/my-jx3-pipeline-catalog/tasks/javascript-ui-nginx/release.yaml@versionStream
          name: ""
          resources:
            # override limits for all containers here
            limits: {}
          volumeMounts:
          - mountPath: /tekton/home/npm
            name: npmrc
          workingDir: /workspace/source
        steps:
        - image: uses:q1323829945/my-jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          resources: {}
        - name: npm-publish
          env: 
          - name: NEXUS_UPLOAD_URL
            value: http://nexus.jx.svc.cluster.local:80/npm-releases/
          - name: NPM_REPOSITRY_RELEASES
            value: npm-releases
          - name: NPM_REPOSITRY_SNAPSHOTS
            value: npm-snapshots
          - name: NPM_USERNAME
            value: admin
          - name: NPM_PASSWORD
            value: admin123
          name: npm-publish
          resources: {}
          script: |
            #!/bin/sh
            
            params='{"name": "'$NPM_USERNAME'", "password": "'$NPM_PASSWORD'" }'
            # echo $params
            loginResult=$(curl -s \
            -H "Accept: application/json" \
            -H "Content-Type:application/json" \
            -X PUT --data "$params" \
            "$NEXUS_UPLOAD_URL-/user/org.couchdb.user:$username"
            )
            tokenVal=$loginResult
            if [[ $tokenVal == *token* ]]
            then
            tokenVal=${tokenVal#*token\":\"}
            tokenVal=${tokenVal/\"\}/}
            echo "login success!!"
            else
            echo "login fail!"
            echo $loginResult
            fi
            authRegistryPath=${NEXUS_UPLOAD_URL/https:\/\//}
            npm set registry $NEXUS_UPLOAD_URL
            npm set //$authRegistryPath:_authToken=$tokenVal
            npm publish --registry $NEXUS_UPLOAD_URL
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
