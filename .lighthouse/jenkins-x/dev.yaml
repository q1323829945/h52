apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: NPM_CONFIG_USERCONFIG
            value: /tekton/home/npm/.npmrc
          image: uses:q1323829945/my-jx3-pipeline-catalog/tasks/javascript-ui-nginx/release.yaml@versionStream
          name: ""
          resources:
            # override limits for all containers here
            limits: {}
          volumeMounts:
          - mountPath: /tekton/home/npm
            name: npmrc
          workingDir: /workspace/source
        steps:
        - image: uses:q1323829945/my-jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          resources: {}
        - name: next-version
          resources: {}
          script: |
            #!/usr/bin/env sh
            date +%s-SNAPSHOT > VERSION
        - name: jx-variables
          resources:
            # override requests for the pod here
            requests:
              cpu: 400m
              memory: 512Mi
        - name: replace-charts
          resources:
            # override requests for the pod here
            requests:
              cpu: 400m
              memory: 512Mi
        - name: build-npm-install
          env: 
          - name: NPM_CONFIG_USERCONFIG
            value: /workspace/source/.lighthouse/jenkins-x/.npmrc
          - name: NPM_URL
            value: https://nexus-jx.saas-ops.finline.app/repository/
          resources: {}
        - name: build-ui-build
          env: 
          - name: NPM_CONFIG_USERCONFIG
            value: /workspace/source/.lighthouse/jenkins-x/.npmrc
          - name: NPM_URL
            value: https://nexus-jx.saas-ops.finline.app/repository/
          resources: {}
        - name: npm-publish
          env: 
          - name: NPM_URL
            value: https://nexus-jx.saas-ops.finline.app/repository/
          - name: NPM_REGISTRY_RELEASES
            value: npm-releases
          - name: NPM_REGISTRY_SNAPSHOTS
            value: npm-snapshots
          - name: NPM_USERNAME
            value: admin
          - name: NPM_PASSWORD
            value: admin123
          - name: NPM_CONFIG_USERCONFIG
            value: /workspace/source/.lighthouse/jenkins-x/.npmrc
          resources: {}
        - name: check-registry
          resources: {}
        - name: build-container-build
          resources: {}
        - name: promote-changelog
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            if [ -d "charts/$REPO_NAME" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi
        - name: promote-helm-release
          resources: {}
        - name: promote-jx-promote
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx promote -b --env mydev --timeout 1h --no-poll
        volumes:
        - name: npmrc
          secret:
            optional: true
            secretName: npmrc
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
